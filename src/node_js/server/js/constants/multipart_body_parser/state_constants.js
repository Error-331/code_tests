'use strict';

const MB_PARSER_INITIAL_STATE = 'MB_PARSER_INITIAL_STATE';
const MB_PARSER_CONTENT_PARSED_STATE = 'MB_PARSER_CONTENT_PARSED_STATE';

const MB_PARSER_INITIAL_BOUNDARY_FOUND_STATE = 'MB_PARSER_INITIAL_BOUNDARY_FOUND_STATE';
const MB_PARSER_NEXT_OR_FINAL_BOUNDARY_FOUND_STATE = 'MB_PARSER_NEXT_OR_FINAL_BOUNDARY_FOUND_STATE';
const MB_PARSER_BOUNDARY_FOUND_STATE = 'MB_PARSER_BOUNDARY_FOUND_STATE';
const MB_PARSER_FINAL_BOUNDARY_FOUND_STATE = 'MB_PARSER_FINAL_BOUNDARY_FOUND_STATE';

const MB_PARSER_SEEK_BOUNDARY_HEADERS_START_STATE = 'MB_PARSER_SEEK_BOUNDARY_HEADERS_START_STATE';
const MB_PARSER_SEEK_BOUNDARY_HEADERS_END_STATE = 'MB_PARSER_SEEK_BOUNDARY_HEADERS_END_STATE';

module.exports.MB_PARSER_INITIAL_STATE = MB_PARSER_INITIAL_STATE;
module.exports.MB_PARSER_CONTENT_PARSED_STATE = MB_PARSER_CONTENT_PARSED_STATE;

module.exports.MB_PARSER_INITIAL_BOUNDARY_FOUND_STATE = MB_PARSER_INITIAL_BOUNDARY_FOUND_STATE;
module.exports.MB_PARSER_NEXT_OR_FINAL_BOUNDARY_FOUND_STATE = MB_PARSER_NEXT_OR_FINAL_BOUNDARY_FOUND_STATE;
module.exports.MB_PARSER_BOUNDARY_FOUND_STATE = MB_PARSER_BOUNDARY_FOUND_STATE;
module.exports.MB_PARSER_FINAL_BOUNDARY_FOUND_STATE = MB_PARSER_FINAL_BOUNDARY_FOUND_STATE;

module.exports.MB_PARSER_SEEK_BOUNDARY_HEADERS_START_STATE = MB_PARSER_SEEK_BOUNDARY_HEADERS_START_STATE;
module.exports.MB_PARSER_SEEK_BOUNDARY_HEADERS_END_STATE = MB_PARSER_SEEK_BOUNDARY_HEADERS_END_STATE;


